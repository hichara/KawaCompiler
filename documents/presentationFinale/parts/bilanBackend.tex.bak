\section{Bilan: BackEnd}
    \begin{frame}{Bilan: BackEnd}{Le composant BackEnd}
    	\begin{block}{Le composant BackEnd}
	    	\begin{itemize}
				\item<1-> Rappel de la fonction du composant
				\begin{itemize}
					\item<2-> Interpréter le Kawatree bien formé par la sémantique en un code LLVM IR.
				  	\item<3-> Produire le fichier \{nom\_programme\}.ll
				  	\item<4-> Compiler le programme en un exécutable
				\end{itemize}
	    	\end{itemize}
	    \end{block}
	\end{frame}
	\begin{frame}{Bilan: BackEnd}{Le composant BackEnd}
    	\begin{block}{Le composant BackEnd}
	    	\begin{itemize}

				\item<1-> Structure du BackEnd
				 \begin{itemize}
				 	\item<2-> IRCompiler : composant parcourant le KawaTree
				  	\item<3-> Famille de génération : famille de composants métiers générant le code
				  	\item<4-> Compilateur LLC et GCC pour la compilation finale
				 	
				 \end{itemize}
	    	\end{itemize}
	    \end{block}
    \end{frame}

    \begin{frame}{Bilan: BackEnd}{Déroulement de la mise en œuvre du BackEnd}
    	\begin{block}{Déroulement de la mise en œuvre du BackEnd}
	    	\begin{itemize}
				\item<1-> Phase d'étude de l'architecture LLVM au cours de laquelle il fallait se familiariser avec l'API

				\item<2-> Établissement de l'architecture du BackEnd
					\begin{itemize}
						\item<3-> Famille de génération
						\item<4-> IRCompiler
					\end{itemize}

				\item<5-> Choix du mode de développement
					\begin{itemize}
						\item<6-> Le développement du BackEnd était ascendant dans la mesure où j'ai commencé par développer la famille de génération avant puis essayé de les intégrer progressivement au IRCompiler.
					\end{itemize}

	    	\end{itemize}
	    \end{block}
    \end{frame}

    \begin{frame}{Bilan: BackEnd}{Déroulement de la mise en œuvre du BackEnd}
    	\begin{block}{Déroulement de la mise en œuvre du BackEnd}
	    	\begin{itemize}
				\item<1-> Problèmes rencontrés
				\begin{itemize}
					\item<2-> Révision à plusieurs reprise de l'architecture du BackEnd à cause d'incohérences rencontrées au fur et à mesure que je développais, causant des retards

					\item<3-> Tests unitaires longs à mettre en œuvre et une compilation lente, augmentant la fatigue.

					\item<4-> Difficulté à tester le composant à cause d'une indisponibilité des tests. Causer par un manque de communication avec le testeur.

					\item<5-> Peu de référence pour produire le code.
					
				\end{itemize}

	    	\end{itemize}
	    \end{block}
    \end{frame}

    \begin{frame}{Bilan: BackEnd}{Déroulement de la mise en œuvre du BackEnd}
    	\begin{block}{Déroulement de la mise en œuvre du BackEnd}
	    	\begin{itemize}
	    		\item<1-> Erreur commise
	    		\begin{itemize}
					\item<2-> Sous estimation de la tâche.
					\item<3-> Architecture défectueuse.
					\item<4-> Sous estimation de l'importance des tests
	    		\end{itemize}
	    	\end{itemize}
	    \end{block}
    \end{frame}


    \begin{frame}{Bilan: BackEnd}{Bilan}
    	\begin{block}{Bilan}
	    	\begin{itemize}
	    		\item<1-> Prise en charge de 
	    		\begin{itemize}
					\item<2-> Génération classe
					\item<3-> Génération méthodes
					\item<4-> Génération appel de méthodes
					\item<5-> Génération attributs
					\item<6-> Génération appel d'attribut
					\item<7-> Génération affectation
					\item<8-> Génération affichage de types primitifs sur la sortie standard
					\item<9-> Génération prise Table ad-Hoc
	    			
	    		\end{itemize}
	    	\end{itemize}
	    \end{block}
	\end{frame}

	\begin{frame}{Bilan: BackEnd}{Bilan}
    	\begin{block}{Bilan}
    		\begin{itemize}
				\item<1-> Pris en charge mais non intégré
				\begin{itemize}
					\item<2-> Opérations binaires
				\end{itemize}

				\item<3-> Non pris en charge
				\begin{itemize}
					\item<4-> Bloc d'instruction à plusieurs niveaux
				\end{itemize}

				\item<5-> Documentation pas en synchronisation avec l'implémentation.
	    	\end{itemize}
	    \end{block}
    \end{frame}

